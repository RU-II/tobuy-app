basePath: /api/v1
definitions:
  models.BaseItemResponse:
    properties:
      category_id:
        type: integer
      counter:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      number:
        type: integer
      status:
        type: integer
      updated_at:
        type: string
    type: object
  models.ItemResponse:
    properties:
      item:
        $ref: '#/definitions/models.BaseItemResponse'
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is the ToBuyApp server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger ToBuyApp API
  version: "1.0"
paths:
  /items:
    get:
      description: Fetch all items
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Fetch all items
      tags:
      - fetchAllItems
  /items/{id}:
    get:
      description: Fetch user's item by id
      parameters:
      - description: Item Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ItemResponse'
        "400":
          description: ""
      summary: Fetch item by id
      tags:
      - fetchItemBuyId
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
  OAuth2AccessCode:
    authorizationUrl: https://example.com/oauth/authorize
    flow: accessCode
    scopes:
      admin: '                            Grants read and write access to administrative
        information'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Application:
    flow: application
    scopes:
      admin: '                             Grants read and write access to administrative
        information'
      write: '                             Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Implicit:
    authorizationUrl: https://example.com/oauth/authorize
    flow: implicit
    scopes:
      admin: '                          Grants read and write access to administrative
        information'
      write: '                          Grants write access'
    type: oauth2
  OAuth2Password:
    flow: password
    scopes:
      admin: '                          Grants read and write access to administrative
        information'
      read: '                           Grants read access'
      write: '                          Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
swagger: "2.0"
